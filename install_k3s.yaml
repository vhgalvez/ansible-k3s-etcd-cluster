- name: Instalar y Configurar K3s con etcd en el Clúster
  hosts: all
  become: true
  gather_facts: no  # Disable gathering facts to avoid Python dependency on Flatcar

  vars:
    k3s_url: "https://github.com/k3s-io/k3s/releases/latest/download/k3s"
    k3s_token_path: "/var/lib/rancher/k3s/server/node-token"
    k3s_server_ip: "10.17.5.10"  # VIP

  tasks:
    - name: Asegurar que los directorios necesarios existen
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - /opt/bin
        - /etc/rancher/k3s
        - /var/lib/rancher/k3s/server

    - name: Descargar e instalar K3s en todos los nodos
      ansible.builtin.get_url:
        url: "{{ k3s_url }}"
        dest: /opt/bin/k3s
        mode: '0755'

    - name: Cargar módulos de red necesarios
      ansible.builtin.modprobe:
        name: "{{ item }}"
      loop:
        - br_netfilter
        - overlay

    - name: Crear enlaces simbólicos para herramientas de K3s en Flatcar
      ansible.builtin.file:
        src: /opt/bin/k3s
        dest: "/opt/bin/{{ item }}"
        state: link
      loop:
        - kubectl
        - crictl
        - ctr

    - name: Configurar servicio K3s en el primer nodo maestro
      ansible.builtin.template:
        src: k3s.service.j2
        dest: /etc/systemd/system/k3s.service
      when: inventory_hostname == k3s_server_ip

    - name: Recargar e iniciar K3s en el primer nodo maestro
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: true
      when: inventory_hostname == k3s_server_ip

    - name: Obtener el token de K3s desde el primer nodo maestro
      ansible.builtin.slurp:
        src: "{{ k3s_token_path }}"
      register: k3s_token
      delegate_to: "{{ k3s_server_ip }}"
      run_once: true

    - name: Configurar nodos maestros adicionales para unirse al clúster
      ansible.builtin.template:
        src: k3s.service.j2
        dest: /etc/systemd/system/k3s.service
      when: inventory_hostname in groups['masters'] and inventory_hostname != k3s_server_ip

    - name: Recargar e iniciar K3s en nodos maestros adicionales
      ansible.builtin.systemd:
        name: k3s
        state: started
        enabled: true
      when: inventory_hostname in groups['masters'] and inventory_hostname != k3s_server_ip

    - name: Configurar nodos trabajadores para unirse al clúster
      ansible.builtin.template:
        src: k3s-agent.service.j2
        dest: /etc/systemd/system/k3s-agent.service
      when: inventory_hostname in groups['workers']

    - name: Recargar e iniciar K3s en los nodos trabajadores
      ansible.builtin.systemd:
        name: k3s-agent
        state: started
        enabled: true
      when: inventory_hostname in groups['workers']

    - name: Configurar kubeconfig en los nodos
      ansible.builtin.copy:
        content: "{{ k3s_token.stdout }}"
        dest: /home/core/.kube/config
      when: inventory_hostname in groups['workers']