- name: Instalar y Configurar K3s con etcd en el Clúster (con VIP en SAN)
  hosts: masters:workers
  become: true

  vars:
    k3s_url: "https://github.com/k3s-io/k3s/releases/download/v1.28.5%2Bk3s1/k3s"
    k3s_binary_path: "/usr/local/bin/k3s"
    k3s_service_dir: "/etc/systemd/system"
    k3s_config_dir: "/etc/rancher/k3s"
    k3s_token_file: "/var/lib/rancher/k3s/server/node-token"
    vip: "10.17.5.10"

  tasks:
    - name: Crear directorios necesarios
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ k3s_config_dir }}"
        - "/var/lib/rancher/k3s"
        - "/usr/local/bin"

    - name: Descargar e instalar K3s
      get_url:
        url: "{{ k3s_url }}"
        dest: "{{ k3s_binary_path }}"
        mode: '0755'

    - name: Crear enlaces simbólicos en Flatcar
      file:
        src: "/usr/local/bin/k3s"
        dest: "/usr/bin/k3s"
        state: link
        force: yes

    - name: Configurar servicio K3s en primer master
      template:
        src: "templates/k3s_master.service.j2"
        dest: "{{ k3s_service_dir }}/k3s.service"
      when: inventory_hostname == groups['masters'][0]

    - name: Recargar e iniciar K3s en el primer nodo
      systemd:
        daemon_reload: yes
        name: k3s
        state: restarted
        enabled: yes
      when: inventory_hostname == groups['masters'][0]

    - name: Obtener token del primer nodo
      shell: "cat {{ k3s_token_file }}"
      register: k3s_token
      when: inventory_hostname == groups['masters'][0]
      run_once: true

    - name: Configurar nodos masters adicionales
      template:
        src: "templates/k3s_master_join.service.j2"
        dest: "{{ k3s_service_dir }}/k3s.service"
      when: inventory_hostname != groups['masters'][0] and inventory_hostname in groups['masters']
      vars:
        token: "{{ hostvars[groups['masters'][0]]['k3s_token']['stdout'] }}"

    - name: Recargar e iniciar servicio en masters adicionales
      systemd:
        daemon_reload: yes
        name: k3s
        state: restarted
        enabled: yes
      when: inventory_hostname != groups['masters'][0] and inventory_hostname in groups['masters']

    - name: Configurar nodos workers
      template:
        src: "templates/k3s_agent.service.j2"
        dest: "{{ k3s_service_dir }}/k3s-agent.service"
      when: inventory_hostname in groups['workers']
      vars:
        token: "{{ hostvars[groups['masters'][0]]['k3s_token']['stdout'] }}"

    - name: Recargar e iniciar k3s-agent en workers
      systemd:
        daemon_reload: yes
        name: k3s-agent
        state: restarted
        enabled: yes
      when: inventory_hostname in groups['workers']

    - name: Copiar kubeconfig al nodo local y reemplazar IP por VIP
      shell: |
        mkdir -p /home/core/.kube
        cp /etc/rancher/k3s/k3s.yaml /home/core/.kube/config
        sed -i 's/127.0.0.1/{{ vip }}/g' /home/core/.kube/config
      when: inventory_hostname == groups['masters'][0]