- name: Instalar y Configurar K3s con etcd en el Clúster (con VIP en SAN)
  hosts: all
  become: true
  gather_facts: false

  vars:
    k3s_url: "https://github.com/k3s-io/k3s/releases/latest/download/k3s"
    k3s_token_path: "/var/lib/rancher/k3s/server/node-token"
    k3s_server_ip: "10.17.4.21"
    k8s_api_vip: "10.17.5.10"

  tasks:
    - name: Crear directorios necesarios
      raw: |
        mkdir -p /opt/bin
        mkdir -p /etc/rancher/k3s
        mkdir -p /var/lib/rancher/k3s/server

    - name: Descargar e instalar K3s
      raw: |
        curl -Lo /opt/bin/k3s "{{ k3s_url }}" && chmod +x /opt/bin/k3s
      args:
        timeout: 600

    - name: Crear enlaces simbólicos
      raw: |
        ln -sf /opt/bin/k3s /opt/bin/kubectl
        ln -sf /opt/bin/k3s /opt/bin/crictl
        ln -sf /opt/bin/k3s /opt/bin/ctr

    - name: Configurar servicio en primer master
      raw: |
        cat <<EOF > /etc/systemd/system/k3s.service
        [Unit]
        Description=K3s
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStart=/opt/bin/k3s server \
          --cluster-init \
          --tls-san {{ k3s_server_ip }} \
          --tls-san {{ k8s_api_vip }} \
          --write-kubeconfig /etc/rancher/k3s/k3s.yaml \
          --write-kubeconfig-mode 644
        Restart=always

        [Install]
        WantedBy=multi-user.target
        EOF
      when: inventory_hostname == k3s_server_ip

    - name: Iniciar K3s en primer master
      raw: |
        systemctl daemon-reload && systemctl enable k3s && systemctl restart k3s && systemctl is-active k3s
      when: inventory_hostname == k3s_server_ip

    - name: Obtener token
      raw: cat {{ k3s_token_path }}
      delegate_to: "{{ k3s_server_ip }}"
      run_once: true
      register: k3s_token

    - name: Configurar otros masters
      raw: |
        cat <<EOF > /etc/systemd/system/k3s.service
        [Unit]
        Description=K3s
        Wants=network-online.target
        After=network-online.target

        [Service]
        ExecStart=/opt/bin/k3s server \
          --server https://{{ k8s_api_vip }}:6443 \
          --token {{ k3s_token.stdout }} \
          --tls-san {{ k3s_server_ip }} \
          --tls-san {{ k8s_api_vip }} \
          --node-name {{ inventory_hostname }}
        Restart=always

        [Install]
        WantedBy=multi-user.target
        EOF
      when: inventory_hostname in groups['masters'] and inventory_hostname != k3s_server_ip

    - name: Iniciar K3s en otros masters
      raw: |
        systemctl daemon-reload && systemctl enable k3s && systemctl restart k3s && systemctl is-active k3s
      when: inventory_hostname in groups['masters'] and inventory_hostname != k3s_server_ip

    - name: Configurar workers
      raw: |
        cat <<EOF > /etc/systemd/system/k3s-agent.service
        [Unit]
        Description=K3s Agent
        After=network-online.target

        [Service]
        ExecStart=/opt/bin/k3s agent \
          --server https://{{ k8s_api_vip }}:6443 \
          --token {{ k3s_token.stdout }} \
          --node-ip {{ ansible_host }}
        Restart=always

        [Install]
        WantedBy=multi-user.target
        EOF
      when: inventory_hostname in groups['workers']

    - name: Iniciar agent en workers
      raw: |
        systemctl daemon-reload && systemctl enable k3s-agent && systemctl restart k3s-agent && systemctl is-active k3s-agent
      when: inventory_hostname in groups['workers']